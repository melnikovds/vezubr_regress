{"uid":"e8b8604b80dccd3b","name":"test_ftl_request_add_lke[lke]","fullName":"tests.test_request_old_ftl_add#test_ftl_request_add_lke","historyId":"0e4ed3beaf86b1ff0cbdf540c1ea4a65","time":{"start":1741546663459,"stop":1741546742169,"duration":78710},"description":"ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф","descriptionHtml":"<p>ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable","statusTrace":"self = <base.base_class.Base object at 0x000001AC7325CE90>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n>               element = WebDriverWait(self.driver, 60).until(condition(locator))\n\nbase\\base_class.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f9cd4be6be9530049443fa00b5b77cd\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x000001AC734422A0>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6B361C6A5+28789]\nE       \t(No symbol) [0x00007FF6B3585B20]\nE       \t(No symbol) [0x00007FF6B3418F9A]\nE       \t(No symbol) [0x00007FF6B346F346]\nE       \t(No symbol) [0x00007FF6B346F57C]\nE       \t(No symbol) [0x00007FF6B34C2B17]\nE       \t(No symbol) [0x00007FF6B349736F]\nE       \t(No symbol) [0x00007FF6B34BF7E3]\nE       \t(No symbol) [0x00007FF6B3497103]\nE       \t(No symbol) [0x00007FF6B345FFC0]\nE       \t(No symbol) [0x00007FF6B3461273]\nE       \tGetHandleVerifier [0x00007FF6B3961AED+3458237]\nE       \tGetHandleVerifier [0x00007FF6B397829C+3550316]\nE       \tGetHandleVerifier [0x00007FF6B396DB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF6B36E2C6A+841274]\nE       \t(No symbol) [0x00007FF6B35909EF]\nE       \t(No symbol) [0x00007FF6B358CB34]\nE       \t(No symbol) [0x00007FF6B358CCD6]\nE       \t(No symbol) [0x00007FF6B357C119]\nE       \tBaseThreadInitThunk [0x00007FFE27EBE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFE2927BF2C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbase_fixture = (<base.base_class.Base object at 0x000001AC7325CE90>, <pages.sidebar.SideBar object at 0x000001AC7325EBA0>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Создание FTL заявок')\n    @allure.description('ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, '\n                        'кузов - Закрытый, адреса - Конкретные, публикация - Тариф')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_ftl_request_add_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        ftl = FTLAdd(base.driver)\n        # Сброс ранее введенных и сохраненных данных\n        ftl.click_button(ftl.cancel_button)\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        # Выбор владельца заявки\n        ftl.dropdown_without_input(ftl.request_owner_select, \"Auto LKZ\")\n        # Установка даты подачи заявки на сегодня\n        ftl.click_button(ftl.start_date_field)\n        ftl.click_button(ftl.today_button)\n        # Установка времени подачи заявки через 3 часа от текущего времени\n        ftl.click_button(ftl.start_time_field)\n        new_time = ftl.naw_time_change(180)\n        ftl.input_in_field(ftl.start_time_input, new_time)\n        time.sleep(1)\n        # Выбор категории заявки - Груз\n        ftl.click_button(ftl.request_category_select)\n        ftl.click_button(ftl.select_freight)\n        # Выбор типа ТС - до 0.5т\n        ftl.dropdown_with_input(ftl.vehicle_type_select, \"до 0.5т\")\n        # Выбор типа кузова - Закрытый\n        ftl.click_button(ftl.vehicle_body_select)\n        ftl.click_button(ftl.body_type_closed_checkbox)\n        # Выбор первого адреса из списка\n        ftl.click_button(ftl.first_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        time.sleep(3)\n        # Выбор второго адреса из списка\n        ftl.click_button(ftl.second_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Березовский, ул Театральная, д 13\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        # Ожидание завершения расчета стоимости\n>       base.get_element(ftl.calculate_finish)\n\ntests\\test_request_old_ftl_add.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.base_class.Base object at 0x000001AC7325CE90>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n                element = WebDriverWait(self.driver, 60).until(condition(locator))\n    \n            return {'name': element_info['name'], 'element': element}\n    \n        except TimeoutException:\n            message = f\"Element '{element_info['name']}' is not {wait_type}\"\n            # Шаг в Allure и вывод в консоль\n            with allure.step(message):\n                print(message)\n>           raise TimeoutException(message)\nE           selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable\n\nbase\\base_class.py:173: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741540328287,"stop":1741540328288,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_fixture","time":{"start":1741546650823,"stop":1741546663459,"duration":12636},"status":"passed","steps":[{"name":"Start test","time":{"start":1741546651956,"stop":1741546651956,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Current url: https://enter.vezubr.com/login","time":{"start":1741546656067,"stop":1741546656067,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in user_email_input: ***","time":{"start":1741546656104,"stop":1741546656236,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in password_input: ***","time":{"start":1741546656236,"stop":1741546656338,"duration":102},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on login_button","time":{"start":1741546656339,"stop":1741546656460,"duration":121},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on sidebar_button","time":{"start":1741546656460,"stop":1741546663459,"duration":6999},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"domain","time":{"start":1741546650823,"stop":1741546650823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable","statusTrace":"self = <base.base_class.Base object at 0x000001AC7325CE90>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n>               element = WebDriverWait(self.driver, 60).until(condition(locator))\n\nbase\\base_class.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3f9cd4be6be9530049443fa00b5b77cd\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x000001AC734422A0>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6B361C6A5+28789]\nE       \t(No symbol) [0x00007FF6B3585B20]\nE       \t(No symbol) [0x00007FF6B3418F9A]\nE       \t(No symbol) [0x00007FF6B346F346]\nE       \t(No symbol) [0x00007FF6B346F57C]\nE       \t(No symbol) [0x00007FF6B34C2B17]\nE       \t(No symbol) [0x00007FF6B349736F]\nE       \t(No symbol) [0x00007FF6B34BF7E3]\nE       \t(No symbol) [0x00007FF6B3497103]\nE       \t(No symbol) [0x00007FF6B345FFC0]\nE       \t(No symbol) [0x00007FF6B3461273]\nE       \tGetHandleVerifier [0x00007FF6B3961AED+3458237]\nE       \tGetHandleVerifier [0x00007FF6B397829C+3550316]\nE       \tGetHandleVerifier [0x00007FF6B396DB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF6B36E2C6A+841274]\nE       \t(No symbol) [0x00007FF6B35909EF]\nE       \t(No symbol) [0x00007FF6B358CB34]\nE       \t(No symbol) [0x00007FF6B358CCD6]\nE       \t(No symbol) [0x00007FF6B357C119]\nE       \tBaseThreadInitThunk [0x00007FFE27EBE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFE2927BF2C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbase_fixture = (<base.base_class.Base object at 0x000001AC7325CE90>, <pages.sidebar.SideBar object at 0x000001AC7325EBA0>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Создание FTL заявок')\n    @allure.description('ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, '\n                        'кузов - Закрытый, адреса - Конкретные, публикация - Тариф')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_ftl_request_add_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        ftl = FTLAdd(base.driver)\n        # Сброс ранее введенных и сохраненных данных\n        ftl.click_button(ftl.cancel_button)\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        # Выбор владельца заявки\n        ftl.dropdown_without_input(ftl.request_owner_select, \"Auto LKZ\")\n        # Установка даты подачи заявки на сегодня\n        ftl.click_button(ftl.start_date_field)\n        ftl.click_button(ftl.today_button)\n        # Установка времени подачи заявки через 3 часа от текущего времени\n        ftl.click_button(ftl.start_time_field)\n        new_time = ftl.naw_time_change(180)\n        ftl.input_in_field(ftl.start_time_input, new_time)\n        time.sleep(1)\n        # Выбор категории заявки - Груз\n        ftl.click_button(ftl.request_category_select)\n        ftl.click_button(ftl.select_freight)\n        # Выбор типа ТС - до 0.5т\n        ftl.dropdown_with_input(ftl.vehicle_type_select, \"до 0.5т\")\n        # Выбор типа кузова - Закрытый\n        ftl.click_button(ftl.vehicle_body_select)\n        ftl.click_button(ftl.body_type_closed_checkbox)\n        # Выбор первого адреса из списка\n        ftl.click_button(ftl.first_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        time.sleep(3)\n        # Выбор второго адреса из списка\n        ftl.click_button(ftl.second_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Березовский, ул Театральная, д 13\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        # Ожидание завершения расчета стоимости\n>       base.get_element(ftl.calculate_finish)\n\ntests\\test_request_old_ftl_add.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.base_class.Base object at 0x000001AC7325CE90>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n                element = WebDriverWait(self.driver, 60).until(condition(locator))\n    \n            return {'name': element_info['name'], 'element': element}\n    \n        except TimeoutException:\n            message = f\"Element '{element_info['name']}' is not {wait_type}\"\n            # Шаг в Allure и вывод в консоль\n            with allure.step(message):\n                print(message)\n>           raise TimeoutException(message)\nE           selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable\n\nbase\\base_class.py:173: TimeoutException","steps":[{"name":"Move to new_order_hover","time":{"start":1741546663460,"stop":1741546663850,"duration":390},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on new_ftl_city_button","time":{"start":1741546663950,"stop":1741546664354,"duration":404},"status":"passed","steps":[{"name":"Assert \"Новый Заказ FTL перевозки\" == \"Новый Заказ FTL перевозки\"","time":{"start":1741546664353,"stop":1741546664354,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on cancel_button","time":{"start":1741546664354,"stop":1741546664625,"duration":271},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Move to new_order_hover","time":{"start":1741546664625,"stop":1741546665104,"duration":479},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on new_ftl_city_button","time":{"start":1741546665205,"stop":1741546665448,"duration":243},"status":"passed","steps":[{"name":"Assert \"Новый Заказ FTL перевозки\" == \"Новый Заказ FTL перевозки\"","time":{"start":1741546665447,"stop":1741546665448,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Select 'Auto LKZ' from dropdown request_owner_select","time":{"start":1741546665448,"stop":1741546670719,"duration":5271},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on start_date_field","time":{"start":1741546670719,"stop":1741546670843,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on today_button","time":{"start":1741546670843,"stop":1741546671482,"duration":639},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on start_time_field","time":{"start":1741546671482,"stop":1741546671616,"duration":134},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in start_time_input: 0155","time":{"start":1741546671616,"stop":1741546672228,"duration":612},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on request_category_select","time":{"start":1741546673230,"stop":1741546673379,"duration":149},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on select_freight","time":{"start":1741546673379,"stop":1741546673520,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Select 'до 0.5т' from dropdown vehicle_type_select","time":{"start":1741546673520,"stop":1741546673798,"duration":278},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on vehicle_body_select","time":{"start":1741546673798,"stop":1741546673923,"duration":125},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on body_type_closed_checkbox","time":{"start":1741546673923,"stop":1741546674095,"duration":172},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on first_address_select","time":{"start":1741546674095,"stop":1741546674957,"duration":862},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in address_filter: Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а","time":{"start":1741546674957,"stop":1741546676196,"duration":1239},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on select_first_radio","time":{"start":1741546676196,"stop":1741546676307,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on confirm_address_button","time":{"start":1741546676307,"stop":1741546676467,"duration":160},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on second_address_select","time":{"start":1741546679468,"stop":1741546680214,"duration":746},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in address_filter: Свердловская обл, г Березовский, ул Театральная, д 13","time":{"start":1741546680214,"stop":1741546681433,"duration":1219},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on select_first_radio","time":{"start":1741546681434,"stop":1741546681614,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on confirm_address_button","time":{"start":1741546681614,"stop":1741546681752,"duration":138},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Element 'calculate_finish' is not clickable","time":{"start":1741546742169,"stop":1741546742169,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Screen taken: tests_test_request_old_ftl_add.py_test_ftl_request_add_lke[lke]_2025.03.09.18.59.02.png","time":{"start":1741546742434,"stop":1741546742435,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"6d2ec36ddda0e9ce","name":"Screenshot","source":"6d2ec36ddda0e9ce.png","type":"image/png","size":209285}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":27,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"base_fixture::0","time":{"start":1741546742435,"stop":1741546744670,"duration":2235},"status":"passed","steps":[{"name":"Test finish","time":{"start":1741546742435,"stop":1741546744670,"duration":2235},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Создание FTL заявок"},{"name":"story","value":"Smoke test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_request_old_ftl_add"},{"name":"host","value":"FirexPC"},{"name":"thread","value":"22332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_request_old_ftl_add"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_fixture","value":"'lke'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e8b8604b80dccd3b.json","parameterValues":["'lke'"]}