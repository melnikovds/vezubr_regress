{"uid":"911fc820d4d37bc9","name":"test_ftl_request_add_lke[lke]","fullName":"tests.test_request_old_ftl_add#test_ftl_request_add_lke","historyId":"0e4ed3beaf86b1ff0cbdf540c1ea4a65","time":{"start":1742235407631,"stop":1742235409573,"duration":1942},"description":"ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф","descriptionHtml":"<p>ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-canceling=\"true\" type=\"button\" class=\"ant-btn ant-btn-ghost\">...</button> is not clickable at point (1590, 1139). Other element would receive the click: <div class=\"white-box-header\">...</div>\n  (Session info: chrome=134.0.6998.89)\nStacktrace:\n\tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\n\t(No symbol) [0x00007FF66D545B20]\n\t(No symbol) [0x00007FF66D3D8F9A]\n\t(No symbol) [0x00007FF66D4371E9]\n\t(No symbol) [0x00007FF66D434BA2]\n\t(No symbol) [0x00007FF66D431C51]\n\t(No symbol) [0x00007FF66D430B51]\n\t(No symbol) [0x00007FF66D422314]\n\t(No symbol) [0x00007FF66D45732A]\n\t(No symbol) [0x00007FF66D421BC6]\n\t(No symbol) [0x00007FF66D457540]\n\t(No symbol) [0x00007FF66D47F7E3]\n\t(No symbol) [0x00007FF66D457103]\n\t(No symbol) [0x00007FF66D41FFC0]\n\t(No symbol) [0x00007FF66D421273]\n\tGetHandleVerifier [0x00007FF66D921AED+3458237]\n\tGetHandleVerifier [0x00007FF66D93829C+3550316]\n\tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\n\tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\n\t(No symbol) [0x00007FF66D5509EF]\n\t(No symbol) [0x00007FF66D54CB34]\n\t(No symbol) [0x00007FF66D54CCD6]\n\t(No symbol) [0x00007FF66D53C119]\n\tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\n\tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]","statusTrace":"base_fixture = (<base.base_class.Base object at 0x000001B42E888BC0>, <pages.sidebar.SideBar object at 0x000001B42E88B680>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Создание FTL заявок')\n    @allure.description('ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, '\n                        'кузов - Закрытый, адреса - Конкретные, публикация - Тариф')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_ftl_request_add_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        ftl = FTLAdd(base.driver)\n        # Сброс ранее введенных и сохраненных данных\n>       ftl.click_button(ftl.cancel_button)\n\ntests\\test_request_old_ftl_add.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:414: in click_button\n    button_dict['element'].click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B42E889670>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF66D53C119]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-canceling=\"true\" type=\"button\" class=\"ant-btn ant-btn-ghost\">...</button> is not clickable at point (1590, 1139). Other element would receive the click: <div class=\"white-box-header\">...</div>\nE         (Session info: chrome=134.0.6998.89)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\nE       \t(No symbol) [0x00007FF66D545B20]\nE       \t(No symbol) [0x00007FF66D3D8F9A]\nE       \t(No symbol) [0x00007FF66D4371E9]\nE       \t(No symbol) [0x00007FF66D434BA2]\nE       \t(No symbol) [0x00007FF66D431C51]\nE       \t(No symbol) [0x00007FF66D430B51]\nE       \t(No symbol) [0x00007FF66D422314]\nE       \t(No symbol) [0x00007FF66D45732A]\nE       \t(No symbol) [0x00007FF66D421BC6]\nE       \t(No symbol) [0x00007FF66D457540]\nE       \t(No symbol) [0x00007FF66D47F7E3]\nE       \t(No symbol) [0x00007FF66D457103]\nE       \t(No symbol) [0x00007FF66D41FFC0]\nE       \t(No symbol) [0x00007FF66D421273]\nE       \tGetHandleVerifier [0x00007FF66D921AED+3458237]\nE       \tGetHandleVerifier [0x00007FF66D93829C+3550316]\nE       \tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\nE       \t(No symbol) [0x00007FF66D5509EF]\nE       \t(No symbol) [0x00007FF66D54CB34]\nE       \t(No symbol) [0x00007FF66D54CCD6]\nE       \t(No symbol) [0x00007FF66D53C119]\nE       \tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742228670612,"stop":1742228670613,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"domain","time":{"start":1742235396015,"stop":1742235396015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_fixture","time":{"start":1742235396015,"stop":1742235407631,"duration":11616},"status":"passed","steps":[{"name":"Start test","time":{"start":1742235397118,"stop":1742235397118,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Current url: https://enter.vezubr.com/login","time":{"start":1742235400910,"stop":1742235400910,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in user_email_input: ***","time":{"start":1742235400947,"stop":1742235401064,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in password_input: ***","time":{"start":1742235401064,"stop":1742235401162,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on login_button","time":{"start":1742235401162,"stop":1742235401255,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on sidebar_button","time":{"start":1742235401256,"stop":1742235407631,"duration":6375},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-canceling=\"true\" type=\"button\" class=\"ant-btn ant-btn-ghost\">...</button> is not clickable at point (1590, 1139). Other element would receive the click: <div class=\"white-box-header\">...</div>\n  (Session info: chrome=134.0.6998.89)\nStacktrace:\n\tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\n\t(No symbol) [0x00007FF66D545B20]\n\t(No symbol) [0x00007FF66D3D8F9A]\n\t(No symbol) [0x00007FF66D4371E9]\n\t(No symbol) [0x00007FF66D434BA2]\n\t(No symbol) [0x00007FF66D431C51]\n\t(No symbol) [0x00007FF66D430B51]\n\t(No symbol) [0x00007FF66D422314]\n\t(No symbol) [0x00007FF66D45732A]\n\t(No symbol) [0x00007FF66D421BC6]\n\t(No symbol) [0x00007FF66D457540]\n\t(No symbol) [0x00007FF66D47F7E3]\n\t(No symbol) [0x00007FF66D457103]\n\t(No symbol) [0x00007FF66D41FFC0]\n\t(No symbol) [0x00007FF66D421273]\n\tGetHandleVerifier [0x00007FF66D921AED+3458237]\n\tGetHandleVerifier [0x00007FF66D93829C+3550316]\n\tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\n\tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\n\t(No symbol) [0x00007FF66D5509EF]\n\t(No symbol) [0x00007FF66D54CB34]\n\t(No symbol) [0x00007FF66D54CCD6]\n\t(No symbol) [0x00007FF66D53C119]\n\tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\n\tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]","statusTrace":"base_fixture = (<base.base_class.Base object at 0x000001B42E888BC0>, <pages.sidebar.SideBar object at 0x000001B42E88B680>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Создание FTL заявок')\n    @allure.description('ЛКЭ. Тест создания FTL заявки от ГВ: тип - Город, подача - Сейчас, ТС - Груз 0.5т, '\n                        'кузов - Закрытый, адреса - Конкретные, публикация - Тариф')\n    @pytest.mark.parametrize('base_fixture', ['lke'], indirect=True)  # Параметризация роли\n    def test_ftl_request_add_lke(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        ftl = FTLAdd(base.driver)\n        # Сброс ранее введенных и сохраненных данных\n>       ftl.click_button(ftl.cancel_button)\n\ntests\\test_request_old_ftl_add.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\base_class.py:414: in click_button\n    button_dict['element'].click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B42E889670>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF66D53C119]\\\\n\\\\tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-canceling=\"true\" type=\"button\" class=\"ant-btn ant-btn-ghost\">...</button> is not clickable at point (1590, 1139). Other element would receive the click: <div class=\"white-box-header\">...</div>\nE         (Session info: chrome=134.0.6998.89)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\nE       \t(No symbol) [0x00007FF66D545B20]\nE       \t(No symbol) [0x00007FF66D3D8F9A]\nE       \t(No symbol) [0x00007FF66D4371E9]\nE       \t(No symbol) [0x00007FF66D434BA2]\nE       \t(No symbol) [0x00007FF66D431C51]\nE       \t(No symbol) [0x00007FF66D430B51]\nE       \t(No symbol) [0x00007FF66D422314]\nE       \t(No symbol) [0x00007FF66D45732A]\nE       \t(No symbol) [0x00007FF66D421BC6]\nE       \t(No symbol) [0x00007FF66D457540]\nE       \t(No symbol) [0x00007FF66D47F7E3]\nE       \t(No symbol) [0x00007FF66D457103]\nE       \t(No symbol) [0x00007FF66D41FFC0]\nE       \t(No symbol) [0x00007FF66D421273]\nE       \tGetHandleVerifier [0x00007FF66D921AED+3458237]\nE       \tGetHandleVerifier [0x00007FF66D93829C+3550316]\nE       \tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\nE       \t(No symbol) [0x00007FF66D5509EF]\nE       \t(No symbol) [0x00007FF66D54CB34]\nE       \t(No symbol) [0x00007FF66D54CCD6]\nE       \t(No symbol) [0x00007FF66D53C119]\nE       \tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Move to new_order_hover","time":{"start":1742235407631,"stop":1742235408084,"duration":453},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on new_ftl_city_button","time":{"start":1742235408185,"stop":1742235408503,"duration":318},"status":"passed","steps":[{"name":"Assert \"Новый Заказ FTL перевозки\" == \"Новый Заказ FTL перевозки\"","time":{"start":1742235408503,"stop":1742235408503,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on cancel_button","time":{"start":1742235408503,"stop":1742235409573,"duration":1070},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button data-canceling=\"true\" type=\"button\" class=\"ant-btn ant-btn-ghost\">...</button> is not clickable at point (1590, 1139). Other element would receive the click: <div class=\"white-box-header\">...</div>\n  (Session info: chrome=134.0.6998.89)\nStacktrace:\n\tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\n\t(No symbol) [0x00007FF66D545B20]\n\t(No symbol) [0x00007FF66D3D8F9A]\n\t(No symbol) [0x00007FF66D4371E9]\n\t(No symbol) [0x00007FF66D434BA2]\n\t(No symbol) [0x00007FF66D431C51]\n\t(No symbol) [0x00007FF66D430B51]\n\t(No symbol) [0x00007FF66D422314]\n\t(No symbol) [0x00007FF66D45732A]\n\t(No symbol) [0x00007FF66D421BC6]\n\t(No symbol) [0x00007FF66D457540]\n\t(No symbol) [0x00007FF66D47F7E3]\n\t(No symbol) [0x00007FF66D457103]\n\t(No symbol) [0x00007FF66D41FFC0]\n\t(No symbol) [0x00007FF66D421273]\n\tGetHandleVerifier [0x00007FF66D921AED+3458237]\n\tGetHandleVerifier [0x00007FF66D93829C+3550316]\n\tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\n\tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\n\t(No symbol) [0x00007FF66D5509EF]\n\t(No symbol) [0x00007FF66D54CB34]\n\t(No symbol) [0x00007FF66D54CCD6]\n\t(No symbol) [0x00007FF66D53C119]\n\tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\n\tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\n\n","statusTrace":"  File \"C:\\Users\\l2new\\PycharmProjects\\Vezubr_Autotests\\base\\base_class.py\", line 414, in click_button\n    button_dict['element'].click()\n  File \"C:\\Users\\l2new\\PycharmProjects\\Vezubr_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\l2new\\PycharmProjects\\Vezubr_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\l2new\\PycharmProjects\\Vezubr_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\l2new\\PycharmProjects\\Vezubr_Autotests\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true},{"name":"Screen taken: tests_test_request_old_ftl_add.py_test_ftl_request_add_lke[lke]_2025.03.17.18.16.49.png","time":{"start":1742235409799,"stop":1742235409801,"duration":2},"status":"passed","steps":[],"attachments":[{"uid":"847c8e55ddf1fa00","name":"Screenshot","source":"847c8e55ddf1fa00.png","type":"image/png","size":106972}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":5,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"base_fixture::0","time":{"start":1742235409801,"stop":1742235411962,"duration":2161},"status":"passed","steps":[{"name":"Test finish","time":{"start":1742235409801,"stop":1742235411962,"duration":2161},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Создание FTL заявок"},{"name":"story","value":"Smoke test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_request_old_ftl_add"},{"name":"host","value":"FirexPC"},{"name":"thread","value":"22408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_request_old_ftl_add"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_fixture","value":"'lke'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e8b8604b80dccd3b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable","time":{"start":1741546663459,"stop":1741546742169,"duration":78710}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"911fc820d4d37bc9.json","parameterValues":["'lke'"]}