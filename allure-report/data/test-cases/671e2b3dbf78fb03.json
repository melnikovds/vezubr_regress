{"uid":"671e2b3dbf78fb03","name":"test_registration_new_lkz[via_link]","fullName":"tests.test_registration#test_registration_new_lkz","historyId":"2ed1feb66b18605b22e0f42440501187","time":{"start":1741546499043,"stop":1741546568927,"duration":69884},"description":"Тест регистрации личного кабинета Грузовладельца: регистрация - По ссылке Экс, тлф. - 98+get_timestamp_eight_signs, инн - Рандом, лицо - Юридическое, почта - Etimestamp@mail.ru, пользователь - Регресс ГВ, после создания заходим в ЛК и проверяем ИНН, далее заходим в ЛК Экс и принимаем ГВ в контур Экс.,","descriptionHtml":"<p>Тест регистрации личного кабинета Грузовладельца: регистрация - По ссылке Экс, тлф. - 98+get_timestamp_eight_signs, инн - Рандом, лицо - Юридическое, почта - Etimestamp@mail.ru, пользователь - Регресс ГВ, после создания заходим в ЛК и проверяем ИНН, далее заходим в ЛК Экс и принимаем ГВ в контур Экс.,</p>\n","status":"broken","statusMessage":"ValueError: Код подтверждения для номера +79809185459 не найден после 12 попыток.","statusTrace":"base_fixture = (<base.base_class.Base object at 0x000001AC732202F0>, <pages.login_page.Login object at 0x000001AC732221B0>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Регистрация личного кабинета')\n    @allure.description('Тест регистрации личного кабинета Грузовладельца: регистрация - По ссылке Экс, тлф. - '\n                        '98+get_timestamp_eight_signs, инн - Рандом, лицо - Юридическое, почта - Etimestamp@mail.ru, '\n                        'пользователь - Регресс ГВ, после создания заходим в ЛК и проверяем ИНН, '\n                        'далее заходим в ЛК Экс и принимаем ГВ в контур Экс.,')\n    @pytest.mark.parametrize('base_fixture', ['via_link'], indirect=True)\n    def test_registration_new_lkz(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, login = base_fixture\n    \n        reg = Registration(base.driver)\n        # Переход к регистрации нового аккаунта\n        reg.click_button(reg.registration_new_account)\n        # Выбор типа регистрации - Грузовладелец\n        reg.click_button(reg.client_button)\n        phone = \"98\" + reg.get_timestamp(eight=True)\n        # Ввод номера телефона\n        reg.input_in_field(reg.phone_input, phone, click_first=True)\n        # Принятие политики конфиденциальности\n        reg.click_button(reg.privacy_policy_checkbox)\n        # Запрос кода подтверждения\n        reg.click_button(reg.get_code_button)\n    \n        sms = SmsCenter(base.driver)\n        # Открытие нового окна для получения кода подтверждения\n        sms.driver.execute_script(\"window.open(arguments[0]);\", sms.sms_url)\n        WebDriverWait(base.driver, 60).until(lambda d: len(d.window_handles) > 1)\n        windows = base.driver.window_handles\n        base.driver.switch_to.window(windows[1])\n    \n        # Ввод логина и пароля для доступа к СМС центру\n        sms.input_in_field(sms.sms_login_input, sms_center[\"login\"], safe=True)\n        sms.input_in_field(sms.sms_password_input, sms_center[\"password\"], safe=True)\n        # Переход к деталям сообщений\n        sms.click_button(sms.sms_login_button)\n        sms.click_button(sms.detailing_button)\n    \n        # Получение кода подтверждения\n>       code = sms.get_confirmation_code(phone)\n\ntests\\test_registration.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.sms_center_page.SmsCenter object at 0x000001AC73223C20>, phone_number = '9809185459', max_attempts = 12\n\n    def get_confirmation_code(self, phone_number, max_attempts=12):\n        \"\"\"\n        Извлекает код подтверждения, связанный с заданным номером телефона, с повторными попытками.\n    \n        Parameters\n        ----------\n        phone_number : str\n            Номер телефона в формате 10 цифр без префикса.\n        max_attempts : int, optional\n            Максимальное количество попыток проверки.\n    \n        Returns\n        -------\n        str or None\n            Код подтверждения как строку, если найден, или None, если не найден после всех попыток.\n    \n        Raises\n        ------\n        ValueError\n            Если код подтверждения не найден после всех попыток.\n        \"\"\"\n        formatted_phone = '+7' + phone_number\n        xpath_locator = f\"//tr[contains(.//div, '{formatted_phone}')]//div[contains(text(), 'Код подтверждения:')]\"\n    \n        for attempt in range(max_attempts):\n            try:\n                element_text = WebDriverWait(self.driver, 5).until(\n                    EC.visibility_of_element_located((By.XPATH, xpath_locator))\n                ).text\n                match = re.search(r'\\d+', element_text)\n                if match:\n                    print(f\"Код подтверждения получен на попытке {attempt + 1}: {match.group(0)}\")\n                    return match.group(0)\n            except TimeoutException:\n                print(f\"Попытка {attempt + 1} не удалась. Обновляем страницу...\")\n                self.click_button(self.refresh_button)\n    \n        # Если после всех попыток код не найден, выбрасываем ошибку\n>       raise ValueError(f\"Код подтверждения для номера {formatted_phone} не найден после {max_attempts} попыток.\")\nE       ValueError: Код подтверждения для номера +79809185459 не найден после 12 попыток.\n\npages\\sms_center_page.py:76: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741540328287,"stop":1741540328288,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"domain","time":{"start":1741546494213,"stop":1741546494215,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_fixture","time":{"start":1741546494215,"stop":1741546499042,"duration":4827},"status":"passed","steps":[{"name":"Start test","time":{"start":1741546495333,"stop":1741546495333,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Current url: https://enter.vezubr.com/contour-join?contourCode=DgzHgntfhz","time":{"start":1741546499010,"stop":1741546499010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"Тест регистрации личного кабинета Грузовладельца: регистрация - По ссылке Экс, тлф. - 98+get_timestamp_eight_signs, инн - Рандом, лицо - Юридическое, почта - Etimestamp@mail.ru, пользователь - Регресс ГВ, после создания заходим в ЛК и проверяем ИНН, далее заходим в ЛК Экс и принимаем ГВ в контур Экс.,","status":"broken","statusMessage":"ValueError: Код подтверждения для номера +79809185459 не найден после 12 попыток.","statusTrace":"base_fixture = (<base.base_class.Base object at 0x000001AC732202F0>, <pages.login_page.Login object at 0x000001AC732221B0>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Регистрация личного кабинета')\n    @allure.description('Тест регистрации личного кабинета Грузовладельца: регистрация - По ссылке Экс, тлф. - '\n                        '98+get_timestamp_eight_signs, инн - Рандом, лицо - Юридическое, почта - Etimestamp@mail.ru, '\n                        'пользователь - Регресс ГВ, после создания заходим в ЛК и проверяем ИНН, '\n                        'далее заходим в ЛК Экс и принимаем ГВ в контур Экс.,')\n    @pytest.mark.parametrize('base_fixture', ['via_link'], indirect=True)\n    def test_registration_new_lkz(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, login = base_fixture\n    \n        reg = Registration(base.driver)\n        # Переход к регистрации нового аккаунта\n        reg.click_button(reg.registration_new_account)\n        # Выбор типа регистрации - Грузовладелец\n        reg.click_button(reg.client_button)\n        phone = \"98\" + reg.get_timestamp(eight=True)\n        # Ввод номера телефона\n        reg.input_in_field(reg.phone_input, phone, click_first=True)\n        # Принятие политики конфиденциальности\n        reg.click_button(reg.privacy_policy_checkbox)\n        # Запрос кода подтверждения\n        reg.click_button(reg.get_code_button)\n    \n        sms = SmsCenter(base.driver)\n        # Открытие нового окна для получения кода подтверждения\n        sms.driver.execute_script(\"window.open(arguments[0]);\", sms.sms_url)\n        WebDriverWait(base.driver, 60).until(lambda d: len(d.window_handles) > 1)\n        windows = base.driver.window_handles\n        base.driver.switch_to.window(windows[1])\n    \n        # Ввод логина и пароля для доступа к СМС центру\n        sms.input_in_field(sms.sms_login_input, sms_center[\"login\"], safe=True)\n        sms.input_in_field(sms.sms_password_input, sms_center[\"password\"], safe=True)\n        # Переход к деталям сообщений\n        sms.click_button(sms.sms_login_button)\n        sms.click_button(sms.detailing_button)\n    \n        # Получение кода подтверждения\n>       code = sms.get_confirmation_code(phone)\n\ntests\\test_registration.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.sms_center_page.SmsCenter object at 0x000001AC73223C20>, phone_number = '9809185459', max_attempts = 12\n\n    def get_confirmation_code(self, phone_number, max_attempts=12):\n        \"\"\"\n        Извлекает код подтверждения, связанный с заданным номером телефона, с повторными попытками.\n    \n        Parameters\n        ----------\n        phone_number : str\n            Номер телефона в формате 10 цифр без префикса.\n        max_attempts : int, optional\n            Максимальное количество попыток проверки.\n    \n        Returns\n        -------\n        str or None\n            Код подтверждения как строку, если найден, или None, если не найден после всех попыток.\n    \n        Raises\n        ------\n        ValueError\n            Если код подтверждения не найден после всех попыток.\n        \"\"\"\n        formatted_phone = '+7' + phone_number\n        xpath_locator = f\"//tr[contains(.//div, '{formatted_phone}')]//div[contains(text(), 'Код подтверждения:')]\"\n    \n        for attempt in range(max_attempts):\n            try:\n                element_text = WebDriverWait(self.driver, 5).until(\n                    EC.visibility_of_element_located((By.XPATH, xpath_locator))\n                ).text\n                match = re.search(r'\\d+', element_text)\n                if match:\n                    print(f\"Код подтверждения получен на попытке {attempt + 1}: {match.group(0)}\")\n                    return match.group(0)\n            except TimeoutException:\n                print(f\"Попытка {attempt + 1} не удалась. Обновляем страницу...\")\n                self.click_button(self.refresh_button)\n    \n        # Если после всех попыток код не найден, выбрасываем ошибку\n>       raise ValueError(f\"Код подтверждения для номера {formatted_phone} не найден после {max_attempts} попыток.\")\nE       ValueError: Код подтверждения для номера +79809185459 не найден после 12 попыток.\n\npages\\sms_center_page.py:76: ValueError","steps":[{"name":"Click on registration_new_account","time":{"start":1741546499043,"stop":1741546499196,"duration":153},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on client_button","time":{"start":1741546499196,"stop":1741546499317,"duration":121},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click and Input in phone_input: 9809185459","time":{"start":1741546499317,"stop":1741546499535,"duration":218},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on privacy_policy_checkbox","time":{"start":1741546499535,"stop":1741546499659,"duration":124},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on get_code_button","time":{"start":1741546499659,"stop":1741546499769,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in sms_login_input: ***","time":{"start":1741546499845,"stop":1741546504461,"duration":4616},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in sms_password_input: ***","time":{"start":1741546504461,"stop":1741546504593,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on sms_login_button","time":{"start":1741546504593,"stop":1741546504728,"duration":135},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on detailing_button","time":{"start":1741546504728,"stop":1741546506056,"duration":1328},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546511214,"stop":1741546511372,"duration":158},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546516474,"stop":1741546516615,"duration":141},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546521774,"stop":1741546521896,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546526999,"stop":1741546527103,"duration":104},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546532197,"stop":1741546532314,"duration":117},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546537410,"stop":1741546537547,"duration":137},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546542662,"stop":1741546542784,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546547893,"stop":1741546548024,"duration":131},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546553118,"stop":1741546553226,"duration":108},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546558347,"stop":1741546558458,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546563574,"stop":1741546563696,"duration":122},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on refresh_button","time":{"start":1741546568797,"stop":1741546568927,"duration":130},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Screen taken: tests_test_registration.py_test_registration_new_lkz[via_link]_2025.03.09.18.56.08.png","time":{"start":1741546569138,"stop":1741546569139,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"5daee8a91d7d4dfd","name":"Screenshot","source":"5daee8a91d7d4dfd.png","type":"image/png","size":127571}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":22,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"base_fixture::0","time":{"start":1741546569140,"stop":1741546571370,"duration":2230},"status":"passed","steps":[{"name":"Test finish","time":{"start":1741546569140,"stop":1741546571370,"duration":2230},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"Smoke test"},{"name":"feature","value":"Регистрация личного кабинета"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_registration"},{"name":"host","value":"FirexPC"},{"name":"thread","value":"22332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_fixture","value":"'via_link'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"671e2b3dbf78fb03.json","parameterValues":["'via_link'"]}