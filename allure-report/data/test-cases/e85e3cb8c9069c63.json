{"uid":"e85e3cb8c9069c63","name":"test_ftl_request_add_lkz[lkz]","fullName":"tests.test_request_old_ftl_add#test_ftl_request_add_lkz","historyId":"d064b85ac4cb5d6cfe72db6f7c8dde3f","time":{"start":1742235423277,"stop":1742235616012,"duration":192735},"description":"ЛКЗ. Тест создания FTL заявки: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф","descriptionHtml":"<p>ЛКЗ. Тест создания FTL заявки: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable","statusTrace":"self = <base.base_class.Base object at 0x000001B42EAD5730>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n>               element = WebDriverWait(self.driver, 60).until(condition(locator))\n\nbase\\base_class.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"749ab4ae0ef7528e2764fdf88f3774f9\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x000001B42EA6C400>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\nE       \t(No symbol) [0x00007FF66D545B20]\nE       \t(No symbol) [0x00007FF66D3D8F9A]\nE       \t(No symbol) [0x00007FF66D42F346]\nE       \t(No symbol) [0x00007FF66D42F57C]\nE       \t(No symbol) [0x00007FF66D482B17]\nE       \t(No symbol) [0x00007FF66D45736F]\nE       \t(No symbol) [0x00007FF66D47F7E3]\nE       \t(No symbol) [0x00007FF66D457103]\nE       \t(No symbol) [0x00007FF66D41FFC0]\nE       \t(No symbol) [0x00007FF66D421273]\nE       \tGetHandleVerifier [0x00007FF66D921AED+3458237]\nE       \tGetHandleVerifier [0x00007FF66D93829C+3550316]\nE       \tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\nE       \t(No symbol) [0x00007FF66D5509EF]\nE       \t(No symbol) [0x00007FF66D54CB34]\nE       \t(No symbol) [0x00007FF66D54CCD6]\nE       \t(No symbol) [0x00007FF66D53C119]\nE       \tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbase_fixture = (<base.base_class.Base object at 0x000001B42EAD5730>, <pages.sidebar.SideBar object at 0x000001B42E853740>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Создание FTL заявок')\n    @allure.description('ЛКЗ. Тест создания FTL заявки: тип - Город, подача - Сейчас, ТС - Груз 0.5т, '\n                        'кузов - Закрытый, адреса - Конкретные, публикация - Тариф')\n    @pytest.mark.parametrize('base_fixture', ['lkz'], indirect=True)  # Параметризация роли\n    def test_ftl_request_add_lkz(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        ftl = FTLAdd(base.driver)\n        # Сброс ранее введенных и сохраненных данных\n        ftl.click_button(ftl.cancel_button)\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        # Установка даты подачи заявки на сегодня\n        ftl.click_button(ftl.start_date_field)\n        ftl.click_button(ftl.today_button)\n        # Установка времени подачи заявки через 3 часа от текущего времени\n        ftl.click_button(ftl.start_time_field)\n        new_time = ftl.naw_time_change(180)\n        ftl.input_in_field(ftl.start_time_input, new_time)\n        time.sleep(1)\n        # Выбор категории заявки - Груз\n        ftl.click_button(ftl.request_category_select)\n        ftl.click_button(ftl.select_freight)\n        # Выбор типа ТС - до 0.5т\n        ftl.click_button(ftl.vehicle_type_select)\n        ftl.dropdown_with_input(ftl.vehicle_type_select, \"до 0.5т\")\n        # Выбор типа кузова - Закрытый\n        ftl.click_button(ftl.vehicle_body_select)\n        ftl.click_button(ftl.body_type_closed_checkbox)\n        # Выбор первого адреса из списка\n        ftl.click_button(ftl.first_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        time.sleep(3)\n        # Выбор второго адреса из списка\n        ftl.click_button(ftl.second_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Березовский, ул Театральная, д 13\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        # Ожидание завершения расчета стоимости\n>       base.get_element(ftl.calculate_finish)\n\ntests\\test_request_old_ftl_add.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.base_class.Base object at 0x000001B42EAD5730>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n                element = WebDriverWait(self.driver, 60).until(condition(locator))\n    \n            return {'name': element_info['name'], 'element': element}\n    \n        except TimeoutException:\n            message = f\"Element '{element_info['name']}' is not {wait_type}\"\n            # Шаг в Allure и вывод в консоль\n            with allure.step(message):\n                print(message)\n>           raise TimeoutException(message)\nE           selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable\n\nbase\\base_class.py:173: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1742228670612,"stop":1742228670613,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_fixture","time":{"start":1742235411965,"stop":1742235423276,"duration":11311},"status":"passed","steps":[{"name":"Start test","time":{"start":1742235413094,"stop":1742235413094,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Current url: https://enter.vezubr.com/login","time":{"start":1742235416686,"stop":1742235416686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in user_email_input: ***","time":{"start":1742235416725,"stop":1742235416845,"duration":120},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in password_input: ***","time":{"start":1742235416845,"stop":1742235416935,"duration":90},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on login_button","time":{"start":1742235416935,"stop":1742235417017,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on sidebar_button","time":{"start":1742235417017,"stop":1742235423276,"duration":6259},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"domain","time":{"start":1742235411965,"stop":1742235411965,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"ЛКЗ. Тест создания FTL заявки: тип - Город, подача - Сейчас, ТС - Груз 0.5т, кузов - Закрытый, адреса - Конкретные, публикация - Тариф","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable","statusTrace":"self = <base.base_class.Base object at 0x000001B42EAD5730>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n>               element = WebDriverWait(self.driver, 60).until(condition(locator))\n\nbase\\base_class.py:164: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"749ab4ae0ef7528e2764fdf88f3774f9\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x000001B42EA6C400>, message = ''\n\n    def until(self, method: Callable[[WebDriver], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF66D5DC6A5+28789]\nE       \t(No symbol) [0x00007FF66D545B20]\nE       \t(No symbol) [0x00007FF66D3D8F9A]\nE       \t(No symbol) [0x00007FF66D42F346]\nE       \t(No symbol) [0x00007FF66D42F57C]\nE       \t(No symbol) [0x00007FF66D482B17]\nE       \t(No symbol) [0x00007FF66D45736F]\nE       \t(No symbol) [0x00007FF66D47F7E3]\nE       \t(No symbol) [0x00007FF66D457103]\nE       \t(No symbol) [0x00007FF66D41FFC0]\nE       \t(No symbol) [0x00007FF66D421273]\nE       \tGetHandleVerifier [0x00007FF66D921AED+3458237]\nE       \tGetHandleVerifier [0x00007FF66D93829C+3550316]\nE       \tGetHandleVerifier [0x00007FF66D92DB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF66D6A2C6A+841274]\nE       \t(No symbol) [0x00007FF66D5509EF]\nE       \t(No symbol) [0x00007FF66D54CB34]\nE       \t(No symbol) [0x00007FF66D54CCD6]\nE       \t(No symbol) [0x00007FF66D53C119]\nE       \tBaseThreadInitThunk [0x00007FF8BD05E8D7+23]\nE       \tRtlUserThreadStart [0x00007FF8BDF1BF6C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:101: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nbase_fixture = (<base.base_class.Base object at 0x000001B42EAD5730>, <pages.sidebar.SideBar object at 0x000001B42E853740>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Создание FTL заявок')\n    @allure.description('ЛКЗ. Тест создания FTL заявки: тип - Город, подача - Сейчас, ТС - Груз 0.5т, '\n                        'кузов - Закрытый, адреса - Конкретные, публикация - Тариф')\n    @pytest.mark.parametrize('base_fixture', ['lkz'], indirect=True)  # Параметризация роли\n    def test_ftl_request_add_lkz(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        ftl = FTLAdd(base.driver)\n        # Сброс ранее введенных и сохраненных данных\n        ftl.click_button(ftl.cancel_button)\n    \n        # Переход к созданию новой FTL заявки\n        sidebar.move_and_click(move_to=sidebar.new_order_hover, click_to=sidebar.new_ftl_city_button,\n                               do_assert=True)\n    \n        # Установка даты подачи заявки на сегодня\n        ftl.click_button(ftl.start_date_field)\n        ftl.click_button(ftl.today_button)\n        # Установка времени подачи заявки через 3 часа от текущего времени\n        ftl.click_button(ftl.start_time_field)\n        new_time = ftl.naw_time_change(180)\n        ftl.input_in_field(ftl.start_time_input, new_time)\n        time.sleep(1)\n        # Выбор категории заявки - Груз\n        ftl.click_button(ftl.request_category_select)\n        ftl.click_button(ftl.select_freight)\n        # Выбор типа ТС - до 0.5т\n        ftl.click_button(ftl.vehicle_type_select)\n        ftl.dropdown_with_input(ftl.vehicle_type_select, \"до 0.5т\")\n        # Выбор типа кузова - Закрытый\n        ftl.click_button(ftl.vehicle_body_select)\n        ftl.click_button(ftl.body_type_closed_checkbox)\n        # Выбор первого адреса из списка\n        ftl.click_button(ftl.first_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        time.sleep(3)\n        # Выбор второго адреса из списка\n        ftl.click_button(ftl.second_address_select, wait=\"lst\")\n        ftl.input_in_field(ftl.address_filter, \"Свердловская обл, г Березовский, ул Театральная, д 13\", wait=\"lst\")\n        ftl.click_button(ftl.select_first_radio)\n        ftl.click_button(ftl.confirm_address_button)\n        # Ожидание завершения расчета стоимости\n>       base.get_element(ftl.calculate_finish)\n\ntests\\test_request_old_ftl_add.py:120: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.base_class.Base object at 0x000001B42EAD5730>, element_info = {'name': 'calculate_finish', 'xpath': \"//span[@class='cost cost-min']\"}, wait_type = 'clickable'\n\n    def get_element(self, element_info: Dict[str, str], wait_type: str = 'clickable') -> Dict[str, Any]:\n        \"\"\"\n        Ожидает элемент в зависимости от выбранного типа ожидания и возвращает его.\n    \n        Parameters\n        ----------\n        element_info : dict\n            Информация о локаторе элемента.\n        wait_type : str, optional\n            Тип ожидания: 'clickable', 'visible', 'located', 'find', или 'invisibility'. По умолчанию 'clickable'.\n    \n        Returns\n        -------\n        dict\n            Словарь с информацией о найденном элементе.\n        \"\"\"\n        try:\n            wait_conditions = {\n                'clickable': EC.element_to_be_clickable,\n                'visible': EC.visibility_of_element_located,\n                'located': EC.presence_of_element_located,\n                'find': lambda locator: self.driver.find_element(*locator),\n                'invisibility': EC.invisibility_of_element_located\n            }\n    \n            if wait_type not in wait_conditions:\n                raise ValueError(f\"Unsupported wait type: {wait_type}\")\n    \n            condition = wait_conditions[wait_type]\n    \n            # Определение типа локаторов и его значения\n            if 'xpath' in element_info:\n                locator = (By.XPATH, element_info['xpath'])\n            elif 'css' in element_info:\n                locator = (By.CSS_SELECTOR, element_info['css'])\n            else:\n                raise ValueError(\"Не указан ни XPath, ни CSS-селектор для элемента\")\n    \n            if wait_type == 'invisibility':\n                # Ожидание невидимости элемента с заданным таймаутом\n                WebDriverWait(self.driver, 15).until(condition(locator))\n                element = None  # Возвращаем None, так как элемент невидим\n            else:\n                # Ожидание для остальных типов\n                element = WebDriverWait(self.driver, 60).until(condition(locator))\n    \n            return {'name': element_info['name'], 'element': element}\n    \n        except TimeoutException:\n            message = f\"Element '{element_info['name']}' is not {wait_type}\"\n            # Шаг в Allure и вывод в консоль\n            with allure.step(message):\n                print(message)\n>           raise TimeoutException(message)\nE           selenium.common.exceptions.TimeoutException: Message: Element 'calculate_finish' is not clickable\n\nbase\\base_class.py:173: TimeoutException","steps":[{"name":"Move to new_order_hover","time":{"start":1742235423277,"stop":1742235423736,"duration":459},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on new_ftl_city_button","time":{"start":1742235423836,"stop":1742235424710,"duration":874},"status":"passed","steps":[{"name":"Assert \"Новый Заказ FTL перевозки\" == \"Новый Заказ FTL перевозки\"","time":{"start":1742235424709,"stop":1742235424710,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on cancel_button","time":{"start":1742235424710,"stop":1742235424989,"duration":279},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Move to new_order_hover","time":{"start":1742235424989,"stop":1742235425497,"duration":508},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on new_ftl_city_button","time":{"start":1742235425598,"stop":1742235425847,"duration":249},"status":"passed","steps":[{"name":"Assert \"Новый Заказ FTL перевозки\" == \"Новый Заказ FTL перевозки\"","time":{"start":1742235425847,"stop":1742235425847,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on start_date_field","time":{"start":1742235425847,"stop":1742235426074,"duration":227},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on today_button","time":{"start":1742235426074,"stop":1742235426725,"duration":651},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on start_time_field","time":{"start":1742235426725,"stop":1742235426830,"duration":105},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in start_time_input: 0115","time":{"start":1742235426830,"stop":1742235427456,"duration":626},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on request_category_select","time":{"start":1742235428457,"stop":1742235428585,"duration":128},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on select_freight","time":{"start":1742235428585,"stop":1742235428700,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on vehicle_type_select","time":{"start":1742235428700,"stop":1742235428864,"duration":164},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Select 'до 0.5т' from dropdown vehicle_type_select","time":{"start":1742235428864,"stop":1742235429135,"duration":271},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on vehicle_body_select","time":{"start":1742235429135,"stop":1742235429258,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on body_type_closed_checkbox","time":{"start":1742235429258,"stop":1742235429385,"duration":127},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on first_address_select","time":{"start":1742235429385,"stop":1742235489699,"duration":60314},"status":"passed","steps":[{"name":"Element 'loading_list' is not visible","time":{"start":1742235489699,"stop":1742235489699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Spinner did not appear","time":{"start":1742235489699,"stop":1742235489699,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in address_filter: Свердловская обл, г Верхняя Пышма, Успенский пр-кт, д 103а","time":{"start":1742235489699,"stop":1742235490920,"duration":1221},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on select_first_radio","time":{"start":1742235490920,"stop":1742235491063,"duration":143},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on confirm_address_button","time":{"start":1742235491063,"stop":1742235491200,"duration":137},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on second_address_select","time":{"start":1742235494201,"stop":1742235554480,"duration":60279},"status":"passed","steps":[{"name":"Element 'loading_list' is not visible","time":{"start":1742235554480,"stop":1742235554480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Spinner did not appear","time":{"start":1742235554480,"stop":1742235554480,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in address_filter: Свердловская обл, г Березовский, ул Театральная, д 13","time":{"start":1742235554480,"stop":1742235555700,"duration":1220},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on select_first_radio","time":{"start":1742235555700,"stop":1742235555778,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on confirm_address_button","time":{"start":1742235555778,"stop":1742235555905,"duration":127},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Element 'calculate_finish' is not clickable","time":{"start":1742235616012,"stop":1742235616012,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Screen taken: tests_test_request_old_ftl_add.py_test_ftl_request_add_lkz[lkz]_2025.03.17.18.20.56.png","time":{"start":1742235657155,"stop":1742235657156,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"7a3a42a910ef7af7","name":"Screenshot","source":"7a3a42a910ef7af7.png","type":"image/png","size":220085}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":31,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"base_fixture::0","time":{"start":1742235657157,"stop":1742235659354,"duration":2197},"status":"passed","steps":[{"name":"Test finish","time":{"start":1742235657157,"stop":1742235659354,"duration":2197},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Создание FTL заявок"},{"name":"story","value":"Smoke test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_request_old_ftl_add"},{"name":"host","value":"FirexPC"},{"name":"thread","value":"22408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_request_old_ftl_add"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_fixture","value":"'lkz'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"6d7e9dd2eb615e80","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Element 'producer_select' is not clickable","time":{"start":1741546757511,"stop":1741546895061,"duration":137550}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e85e3cb8c9069c63.json","parameterValues":["'lkz'"]}