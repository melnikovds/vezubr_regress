{"uid":"898968b200e1ba95","name":"test_insurance_contract_attach_lkp[lkp]","fullName":"tests.test_insurance_operations#test_insurance_contract_attach_lkp","historyId":"02c07f094a2c78edd296ecedc2f3b901","time":{"start":1741544523620,"stop":1741544540231,"duration":16611},"description":"ЛКП. Тест прикрепления и открепления договора страхования к ГВ","descriptionHtml":"<p>ЛКП. Тест прикрепления и открепления договора страхования к ГВ</p>\n","status":"failed","statusMessage":"AssertionError: Expected '20241205222735' to appear 1 times, but found 0 times.","statusTrace":"base_fixture = (<base.base_class.Base object at 0x000001AC73254650>, <pages.sidebar.SideBar object at 0x000001AC73254F50>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Прикрепление и открепление договоров страхования')\n    @allure.description('ЛКП. Тест прикрепления и открепления договора страхования к ГВ')\n    @pytest.mark.parametrize('base_fixture', ['lkp'], indirect=True)  # Параметризация роли\n    def test_insurance_contract_attach_lkp(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку клиентов\n        sidebar.click_button(sidebar.clients_list_button, do_assert=True, wait=\"lst\")\n    \n        client_list = ClientsList(base.driver)\n        # Клик по клиенту с ИНН \"client_lkz_inn\"\n        client_list.click_button(client_list.client_lkz_inn, wait=\"form\")\n    \n        contractor = Contractor(base.driver)\n        # Переход на вкладку настроек контрагента\n        contractor.click_button(contractor.settings_tab)\n        # Разворачивание списка договоров страхования\n        contractor.click_button(contractor.insurance_expandable_list)\n        # Выбор страховой компании \"Энергогарант\"\n        contractor.dropdown_without_input(contractor.insurance_company_select, \"Энергогарант\")\n        # Выбор конкретного договора страхования\n        contractor.click_and_select_with_arrows(contractor.insurance_contract_select, arrow_presses=4)\n        # Подтверждение привязки договора\n        contractor.click_button(contractor.confirm_button, do_assert=True)\n        # Подтверждение успешного выполнения действия\n        contractor.click_button(contractor.ok_button)\n        time.sleep(2)\n        # Проверка наличия одного из договоров на странице\n>       contractor.find_text_on_page(text='20241205222735', occurrences=1)\n\ntests\\test_insurance_operations.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.contractor_page.Contractor object at 0x000001AC72E2F470>, text = '20241205222735', occurrences = 1\n\n    def find_text_on_page(self, text: str, occurrences: int = 1) -> None:\n        \"\"\"\n        Проверяет наличие указанного текста на странице и количество его вхождений.\n    \n        Parameters\n        ----------\n        text : str\n            Текст, который необходимо найти на странице.\n        occurrences : int, optional\n            Количество раз, которое текст должен присутствовать на странице (по умолчанию 1).\n    \n        Raises\n        -------\n        AssertionError\n            Если количество вхождений текста на странице не совпадает с ожидаемым.\n        \"\"\"\n    \n        try:\n            page_source = self.driver.page_source\n            count = page_source.count(text)\n    \n            if count == occurrences:\n                with allure.step(f\"Text '{text}' found {count} times as expected.\"):\n                    print(f\"Text '{text}' found {count} times as expected.\")\n            else:\n>               raise AssertionError (\n                    f\"Expected '{text}' to appear {occurrences} times, but found {count} times.\"\n                )\nE               AssertionError: Expected '20241205222735' to appear 1 times, but found 0 times.\n\nbase\\base_class.py:304: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1741540328287,"stop":1741540328288,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"domain","time":{"start":1741544511050,"stop":1741544511050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"base_fixture","time":{"start":1741544511050,"stop":1741544523620,"duration":12570},"status":"passed","steps":[{"name":"Start test","time":{"start":1741544512160,"stop":1741544512160,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Current url: https://enter.vezubr.com/login","time":{"start":1741544516491,"stop":1741544516491,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in user_email_input: ***","time":{"start":1741544516516,"stop":1741544516639,"duration":123},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Input in password_input: ***","time":{"start":1741544516640,"stop":1741544516734,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on login_button","time":{"start":1741544516734,"stop":1741544516827,"duration":93},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on sidebar_button","time":{"start":1741544516827,"stop":1741544523620,"duration":6793},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":6,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"ЛКП. Тест прикрепления и открепления договора страхования к ГВ","status":"failed","statusMessage":"AssertionError: Expected '20241205222735' to appear 1 times, but found 0 times.","statusTrace":"base_fixture = (<base.base_class.Base object at 0x000001AC73254650>, <pages.sidebar.SideBar object at 0x000001AC73254F50>), domain = 'com'\n\n    @allure.story(\"Smoke test\")\n    @allure.feature('Прикрепление и открепление договоров страхования')\n    @allure.description('ЛКП. Тест прикрепления и открепления договора страхования к ГВ')\n    @pytest.mark.parametrize('base_fixture', ['lkp'], indirect=True)  # Параметризация роли\n    def test_insurance_contract_attach_lkp(base_fixture, domain):\n        # Инициализация базовых объектов через фикстуру\n        base, sidebar = base_fixture\n    \n        # Переход к списку клиентов\n        sidebar.click_button(sidebar.clients_list_button, do_assert=True, wait=\"lst\")\n    \n        client_list = ClientsList(base.driver)\n        # Клик по клиенту с ИНН \"client_lkz_inn\"\n        client_list.click_button(client_list.client_lkz_inn, wait=\"form\")\n    \n        contractor = Contractor(base.driver)\n        # Переход на вкладку настроек контрагента\n        contractor.click_button(contractor.settings_tab)\n        # Разворачивание списка договоров страхования\n        contractor.click_button(contractor.insurance_expandable_list)\n        # Выбор страховой компании \"Энергогарант\"\n        contractor.dropdown_without_input(contractor.insurance_company_select, \"Энергогарант\")\n        # Выбор конкретного договора страхования\n        contractor.click_and_select_with_arrows(contractor.insurance_contract_select, arrow_presses=4)\n        # Подтверждение привязки договора\n        contractor.click_button(contractor.confirm_button, do_assert=True)\n        # Подтверждение успешного выполнения действия\n        contractor.click_button(contractor.ok_button)\n        time.sleep(2)\n        # Проверка наличия одного из договоров на странице\n>       contractor.find_text_on_page(text='20241205222735', occurrences=1)\n\ntests\\test_insurance_operations.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.contractor_page.Contractor object at 0x000001AC72E2F470>, text = '20241205222735', occurrences = 1\n\n    def find_text_on_page(self, text: str, occurrences: int = 1) -> None:\n        \"\"\"\n        Проверяет наличие указанного текста на странице и количество его вхождений.\n    \n        Parameters\n        ----------\n        text : str\n            Текст, который необходимо найти на странице.\n        occurrences : int, optional\n            Количество раз, которое текст должен присутствовать на странице (по умолчанию 1).\n    \n        Raises\n        -------\n        AssertionError\n            Если количество вхождений текста на странице не совпадает с ожидаемым.\n        \"\"\"\n    \n        try:\n            page_source = self.driver.page_source\n            count = page_source.count(text)\n    \n            if count == occurrences:\n                with allure.step(f\"Text '{text}' found {count} times as expected.\"):\n                    print(f\"Text '{text}' found {count} times as expected.\")\n            else:\n>               raise AssertionError (\n                    f\"Expected '{text}' to appear {occurrences} times, but found {count} times.\"\n                )\nE               AssertionError: Expected '20241205222735' to appear 1 times, but found 0 times.\n\nbase\\base_class.py:304: AssertionError","steps":[{"name":"Click on clients_list_button","time":{"start":1741544523620,"stop":1741544524599,"duration":979},"status":"passed","steps":[{"name":"Assert \"Список контрагентов\" == \"Список контрагентов\"","time":{"start":1741544524598,"stop":1741544524599,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on client_lkz_inn","time":{"start":1741544524599,"stop":1741544525310,"duration":711},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on settings_tab","time":{"start":1741544525310,"stop":1741544525417,"duration":107},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on insurance_expandable_list","time":{"start":1741544525417,"stop":1741544525516,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Select 'Энергогарант' from dropdown insurance_company_select","time":{"start":1741544525516,"stop":1741544531306,"duration":5790},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Clicked on insurance_contract_select and selected with 4 arrow presses","time":{"start":1741544537430,"stop":1741544537430,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on confirm_button","time":{"start":1741544537430,"stop":1741544538102,"duration":672},"status":"passed","steps":[{"name":"Assert \"Страховая компания и Договор страхования были успешно назначены для Контрагента null\" == \"Страховая компания и Договор страхования были успешно назначены для Контрагента.*\"","time":{"start":1741544538101,"stop":1741544538102,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Click on calendar_ok_button","time":{"start":1741544538102,"stop":1741544538211,"duration":109},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Error finding text on the page: Expected '20241205222735' to appear 1 times, but found 0 times.","time":{"start":1741544540231,"stop":1741544540231,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Screen taken: tests_test_insurance_operations.py_test_insurance_contract_attach_lkp[lkp]_2025.03.09.18.22.20.png","time":{"start":1741544540437,"stop":1741544540438,"duration":1},"status":"passed","steps":[],"attachments":[{"uid":"a41a98b00d69b1f7","name":"Screenshot","source":"a41a98b00d69b1f7.png","type":"image/png","size":75343}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":12,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"base_fixture::0","time":{"start":1741544540439,"stop":1741544542630,"duration":2191},"status":"passed","steps":[{"name":"Test finish","time":{"start":1741544540439,"stop":1741544542630,"duration":2191},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"feature","value":"Прикрепление и открепление договоров страхования"},{"name":"story","value":"Smoke test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_insurance_operations"},{"name":"host","value":"FirexPC"},{"name":"thread","value":"22332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_insurance_operations"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"base_fixture","value":"'lkp'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"898968b200e1ba95.json","parameterValues":["'lkp'"]}